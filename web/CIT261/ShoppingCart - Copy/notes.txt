General Notes: Each item for sale has a different price. View the item name and price with the "Get details" button. If you want to add that item to your cart, press "Add to Cart". You may add an item multiple times. At the bottom of the page a button will take you to the cart page. You may either return to the shopping page and add more items, remove items if you no longer want them or that quantity, or proceed to checkout. The "Proceed to Checkout" button is not a functioning button currently, because this concludes the showcase. See more details about the behind the scenes functionality relevant to each code topic below.

JS:Whenever the user presses any of either the “Add to Cart” or “Get details” buttons, Javascript functions, with parameters, are called. In both cases, Javascript is used to begin an AJAX interaction (which receives a JSON file from the server). When the response text is received back from the server, Javascript parses the information and stores it in a Javascript associative array. Then, loops, conditional statements, and variables are used to isolate the item requested. If details about the item were requested, the details are displayed by an alert box to the user. If adding to the cart was requested, the Javascript is used to manipulate the class of a hidden <div> inside the html page to briefly show it as a toast message, stating that the item was added to the cart successfully.

JSON:Whenever the user presses any of either the “Add to Cart” or “Get details” buttons, Javascript functions, with parameters, are called. In both cases, Javascript is used to begin an AJAX interaction which receives a JSON file (items.json) from the server. When details are requested, both the name and the price value from the JSON data are shown to the user. On the cart page, I learned how to read and decode the JSON data with PHP, and then access the values I wanted (which was a little tricky, because Javascript and PHP create object hierarchies from JSON differently). You can view the PHP code where that happens here (look for ‘json_decode’): https://github.com/halgren-ann/homework-website/blob/master/web/CIT261/ShoppingCart/cartPage.php

AJAX: Whenever the user presses any of either the “Add to Cart” or “Get details” buttons, Javascript functions are called. In both cases, Javascript is used to begin an AJAX interaction which receives a JSON file (items.json) from the server. When details are requested, both the name and the price value from the JSON data are shown to the user. This is all done within the AJAX request, so the information is loaded and presented to the user without the page being reloaded or returning to the top of the page. These requests are GET requests. The addToCart function also calls addToCartSession while still within the AJAX operation. In addToCartSession, AJAX is used to send information to a PHP file, which then modifies the current Session variables. You can see this in this line: 
xmlhttp.open("GET", "addToCartSession.php?q=" + item, true);


CSS3 Transitions and Animations triggered with JS: First, direct your attention to the very bottom of the index.php page, where I have located the <div> element containing my ‘snackbar’ toast item. This element is currently hidden with CSS via the #snackbar id. Also due to the CSS, the element is in a fixed location at the bottom of the viewing screen, regardless of where on the webpage the user is. When one of the “Add to Cart” buttons is pressed, Javascript adds the class “show” to the <div> element, which triggers the css transition for now “#snackbar.show” (which in turn calls some animation kits). This element is only shown for 3 seconds before disappearing. The majority of this code comes from w3school.com, with slight alterations made by me.